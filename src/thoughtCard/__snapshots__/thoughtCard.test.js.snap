// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`ThoughtCard should match the snapshot 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <ThoughtCard
    thought={Object {}}
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": Array [
        <h3
          className="title"
          contentEditable={false}
        />,
        <p
          className="body"
          contentEditable={false}
        />,
        <div
          className="buttons-container"
        >
          <button
            className="edit-button buttons"
            onClick={[Function]}
          >
            Edit
          </button>
          <button
            className="delete-button buttons"
          >
            Delete
          </button>
        </div>,
      ],
      "className": "ThoughtCard",
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": undefined,
          "className": "title",
          "contentEditable": false,
        },
        "ref": null,
        "rendered": null,
        "type": "h3",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": undefined,
          "className": "body",
          "contentEditable": false,
        },
        "ref": null,
        "rendered": null,
        "type": "p",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            <button
              className="edit-button buttons"
              onClick={[Function]}
            >
              Edit
            </button>,
            <button
              className="delete-button buttons"
            >
              Delete
            </button>,
          ],
          "className": "buttons-container",
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": "Edit",
              "className": "edit-button buttons",
              "id": undefined,
              "onClick": [Function],
            },
            "ref": null,
            "rendered": "Edit",
            "type": "button",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": "Delete",
              "className": "delete-button buttons",
              "id": undefined,
              "onClick": undefined,
            },
            "ref": null,
            "rendered": "Delete",
            "type": "button",
          },
        ],
        "type": "div",
      },
    ],
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <h3
            className="title"
            contentEditable={false}
          />,
          <p
            className="body"
            contentEditable={false}
          />,
          <div
            className="buttons-container"
          >
            <button
              className="edit-button buttons"
              onClick={[Function]}
            >
              Edit
            </button>
            <button
              className="delete-button buttons"
            >
              Delete
            </button>
          </div>,
        ],
        "className": "ThoughtCard",
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": undefined,
            "className": "title",
            "contentEditable": false,
          },
          "ref": null,
          "rendered": null,
          "type": "h3",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": undefined,
            "className": "body",
            "contentEditable": false,
          },
          "ref": null,
          "rendered": null,
          "type": "p",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              <button
                className="edit-button buttons"
                onClick={[Function]}
              >
                Edit
              </button>,
              <button
                className="delete-button buttons"
              >
                Delete
              </button>,
            ],
            "className": "buttons-container",
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": "Edit",
                "className": "edit-button buttons",
                "id": undefined,
                "onClick": [Function],
              },
              "ref": null,
              "rendered": "Edit",
              "type": "button",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": "Delete",
                "className": "delete-button buttons",
                "id": undefined,
                "onClick": undefined,
              },
              "ref": null,
              "rendered": "Delete",
              "type": "button",
            },
          ],
          "type": "div",
        },
      ],
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
}
`;
